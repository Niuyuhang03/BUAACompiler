const int max = +100, min = -0;
const char fail = 'n';
int num, array[100], result;
char id, pwd[20], _a2;

char fun(char c1, char c2) {
    return(c1 + c2);
}

int fun2(int c1, int c2) {
    return(c1 + c2);
}

int fun3(int a, int b, int c, int d, int e) {
    printf(a+b+c+d+e);
}

void output() {
    printf("result:", result);
}

int calcul(int n) {
    int nn;
    nn = -n * n + n - n + -1;
    nn = +(n / n) + 1 + 'c' + fun('a', fun('c', 'd'));
    if (n == 1) {
        output();
    }
    if (n > max) {
        printf("above max");
        return(-1);
    }
    if (n < min) {
        printf("below min");
        return(-1);
    }
    if (n > 1) {
        result = result * n;
        calcul(n - 1);
    }
    return(0);
}

void test_while_and_switch() {
    while (num >= 1) {
        switch(num) {
            case +1: printf("num=1");
            default:;
        }
        switch(num) {
            case -1: printf("num=-1");
            case 1: printf("num=1");
            default: num = num;
        }
        switch(num) {
            case 1: printf("num=1");
        }
        num = num - 1;
    }
    while (num >= 1) {
        printf("error");
        num = 0;
    }
}

void test_relation(char ch){
    if (ch < 98)
        printf("<");
    if (ch <= 98)
        printf("<=");
    if (ch == 98)
        printf("==");
    if (ch > 98)
        printf(">");
    if (ch >= 98)
        printf(">=");
    if (ch != 98)
        printf("!=");
}

void test_other(){
    const char a = '+', b = '-', c = '*', d = '/', e = '_', f = 'a', g = '0', h = '1';
    printf(" !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~\n");
    switch(b) {
        case '+': printf("+");
        default: printf("error");
    }
}

void main() {
    const char myId = '1';
    int flag, myArray[100], test, returnvalue, nn;
    char ch;
    flag = 0;
    result = 1;
    scanf(num);
    scanf(test);
    scanf(ch);
    if (num == 0) {
        flag = 1;
    }
    if (flag) {
        printf("result:", num + 1);
    }
    if (flag == 0) {
        returnvalue = calcul(num);
        printf(returnvalue);
    }
    if (test == 1) {
        test_while_and_switch();
    }
    if (test == 2) {
        test_relation(ch);
    }
    if (test == 3) {
        test_other();
    }
    if (test == 4) {
        nn = 1 + fun2(3, 7);
        printf(nn);
        nn = 1 + fun2(3, fun(5, 2));
        printf(nn);
        fun3(1,2,3,4,5);
    }
    if (test == 5) {
        nn = 1;
        printf(nn);
        num = 2;
        printf(num);
        nn = num;
        printf(nn);
        num = 3;
        num = nn;
        printf(num);
        array[3] = 4;
        printf(array[3]);
        num = array[3];
        printf(num);
        myArray[4] = 5;
        printf(myArray[4]);
        num = myArray[4];
        printf(num);
    }
}
